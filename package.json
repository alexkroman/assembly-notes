{
  "name": "assembly-notes",
  "productName": "Assembly-Notes",
  "description": "Assembly-Notes",
  "keywords": [],
  "main": "./dist/main/main.js",
  "type": "module",
  "version": "1.0.102",
  "author": "Alex Kroman <alex@alexkroman.com>",
  "engines": {
    "node": ">=24.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "start": "npm run build:all && cross-env DEV_MODE=true electron .",
    "start:fresh": "npm run build:all && cross-env DEV_MODE=true FRESH_MODE=true FRESH_ID=$(date +%s) electron .",
    "dev": "npm run dev:all",
    "dev:all": "npm run build:preload && concurrently -k \"npm run dev:main\" \"npm run dev:renderer\" \"npm run dev:electron\"",
    "dev:main": "tsc --watch",
    "dev:renderer": "vite",
    "dev:electron": "wait-on http://localhost:5173 && cross-env DEV_MODE=true VITE_DEV_SERVER=true electron .",
    "clean": "rimraf dist/main dist/preload dist/renderer",
    "clean:all": "rimraf dist",
    "clean:release": "rimraf release",
    "build:all": "npm run clean && npm run build:main && npm run build:preload && npm run build:renderer && npm run build:audio-processor && npm run build:dictation-status && npm run build:dictation-preload",
    "build:main": "tsc",
    "build:preload": "cross-env BUILD_TARGET=preload vite build",
    "build:renderer": "cross-env BUILD_TARGET=renderer vite build",
    "build:audio-processor": "vite build --config vite.audio-processor.config.js",
    "build:dictation-status": "vite build --config vite.dictation-status.config.ts",
    "build:dictation-preload": "vite build --config vite.dictation-preload.config.ts",
    "build": "npm run build:all && npm run build-icons && electron-builder --mac --win --linux --publish never",
    "build:mac": "npm run build:all && npm run build-icons && electron-builder --mac --publish never",
    "build:mac:notarized": "./scripts/build-mac-notarized.sh",
    "build:win": "npm run build:all && npm run build-icons && electron-builder --win --publish never",
    "build:linux": "npm run build:all && npm run build-icons && electron-builder --linux --x64 --publish never",
    "build:linux:x64": "npm run build:all && npm run build-icons && electron-builder --linux --x64 --publish never",
    "build:linux:arm64": "npm run build:all && npm run build-icons && electron-builder --linux --arm64 --publish never",
    "build:release:mac": "npm run build:all && npm run build-icons && electron-builder --mac --publish always --config electron-builder-notarize.json",
    "build:release:win": "npm run build:all && npm run build-icons && electron-builder --win --publish always",
    "build:release:linux": "npm run build:all && npm run build-icons && electron-builder --linux --publish always",
    "build-icons": "node scripts/generate-icons.js",
    "pack": "electron-builder --dir",
    "postinstall": "electron-builder install-app-deps",
    "lint": "npm run typecheck && eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "fix": "npm run lint:fix && npm run format",
    "typecheck": "tsc --noEmit && tsc --noEmit --project tsconfig.test.json",
    "test": "jest && playwright test",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:all": "concurrently \"npm run test:watch\" \"npm run test:e2e\"",
    "test:staged": "jest --bail --findRelatedTests",
    "release:patch": "./scripts/release-pr.sh patch",
    "release:minor": "./scripts/release-pr.sh minor",
    "release:major": "./scripts/release-pr.sh major",
    "check-updates": "ncu",
    "update-deps": "ncu -u",
    "setup": "./scripts/setup-env.sh",
    "prepare": "husky",
    "dev:update-server": "node scripts/update-server.js",
    "test:autoupdate": "USE_LOCAL_UPDATE_SERVER=true UPDATE_FEED_URL=http://localhost:8000 open release/mac-arm64/Assembly-Notes.app"
  },
  "dependencies": {
    "@jitsi/robotjs": "^0.6.17",
    "@reduxjs/toolkit": "^2.8.2",
    "@types/uuid": "^10.0.0",
    "@types/wav-encoder": "^1.3.3",
    "assemblyai": "^4.14.2",
    "better-sqlite3": "^12.2.0",
    "dotenv": "^17.2.1",
    "electron-audio-loopback": "^1.0.6",
    "electron-log": "^5.4.2",
    "electron-redux": "^2.0.0",
    "electron-updater": "^6.6.2",
    "posthog-js": "^1.260.2",
    "posthog-node": "^5.8.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-redux": "^9.2.0",
    "reflect-metadata": "^0.2.2",
    "tsyringe": "^4.10.0",
    "uuid": "^11.1.0",
    "wav-encoder": "^1.3.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.34.0",
    "@playwright/test": "^1.54.2",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.1.0",
    "@types/react": "^19.1.11",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.1",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "electron": "37.3.1",
    "electron-builder": "^26.0.19",
    "electron-devtools-installer": "^4.0.0",
    "eslint": "^9.33.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-markdown": "^5.1.0",
    "eslint-plugin-markdownlint": "^0.9.0",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-environment-node": "^30.0.5",
    "jiti": "^2.5.1",
    "npm-check-updates": "^18.0.2",
    "playwright": "^1.54.1",
    "png2icons": "^2.0.1",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "sharp": "^0.34.3",
    "tailwindcss": "^4.1.11",
    "ts-jest": "^29.4.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.39.0",
    "vite": "^7.1.3",
    "wait-on": "^8.0.4"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,html,css}": [
      "prettier --write"
    ]
  }
}
